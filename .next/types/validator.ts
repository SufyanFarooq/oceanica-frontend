// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/about-us/page.tsx
{
  const handler = {} as typeof import("../../app/about-us/page.js")
  handler satisfies AppPageConfig<"/about-us">
}

// Validate ../../app/contact-us/page.tsx
{
  const handler = {} as typeof import("../../app/contact-us/page.js")
  handler satisfies AppPageConfig<"/contact-us">
}

// Validate ../../app/crop-solutions/corn/page.tsx
{
  const handler = {} as typeof import("../../app/crop-solutions/corn/page.js")
  handler satisfies AppPageConfig<"/crop-solutions/corn">
}

// Validate ../../app/crop-solutions/cotton/page.tsx
{
  const handler = {} as typeof import("../../app/crop-solutions/cotton/page.js")
  handler satisfies AppPageConfig<"/crop-solutions/cotton">
}

// Validate ../../app/crop-solutions/page.tsx
{
  const handler = {} as typeof import("../../app/crop-solutions/page.js")
  handler satisfies AppPageConfig<"/crop-solutions">
}

// Validate ../../app/crop-solutions/potato/page.tsx
{
  const handler = {} as typeof import("../../app/crop-solutions/potato/page.js")
  handler satisfies AppPageConfig<"/crop-solutions/potato">
}

// Validate ../../app/crop-solutions/rice/page.tsx
{
  const handler = {} as typeof import("../../app/crop-solutions/rice/page.js")
  handler satisfies AppPageConfig<"/crop-solutions/rice">
}

// Validate ../../app/crop-solutions/sugarcane/page.tsx
{
  const handler = {} as typeof import("../../app/crop-solutions/sugarcane/page.js")
  handler satisfies AppPageConfig<"/crop-solutions/sugarcane">
}

// Validate ../../app/crop-solutions/wheat/page.tsx
{
  const handler = {} as typeof import("../../app/crop-solutions/wheat/page.js")
  handler satisfies AppPageConfig<"/crop-solutions/wheat">
}

// Validate ../../app/growth-plan/page.tsx
{
  const handler = {} as typeof import("../../app/growth-plan/page.js")
  handler satisfies AppPageConfig<"/growth-plan">
}

// Validate ../../app/naya-savera/page.tsx
{
  const handler = {} as typeof import("../../app/naya-savera/page.js")
  handler satisfies AppPageConfig<"/naya-savera">
}

// Validate ../../app/page.tsx
{
  const handler = {} as typeof import("../../app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../app/products/search/crop-protection/page.tsx
{
  const handler = {} as typeof import("../../app/products/search/crop-protection/page.js")
  handler satisfies AppPageConfig<"/products/search/crop-protection">
}

// Validate ../../app/stewardship/page.tsx
{
  const handler = {} as typeof import("../../app/stewardship/page.js")
  handler satisfies AppPageConfig<"/stewardship">
}







// Validate ../../app/layout.tsx
{
  const handler = {} as typeof import("../../app/layout.js")
  handler satisfies LayoutConfig<"/">
}
